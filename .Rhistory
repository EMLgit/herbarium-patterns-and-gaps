library(ggplot2)
library(dplyr)
library(khroma)
library(ggpubr)
fams <- dat %>%
group_by(Accepted_family) %>%
filter(!Accepted_family=="") %>%
count(sort=TRUE)
gens <- dat %>%
group_by(Genus_matched) %>%
filter(!Genus_matched=="") %>%
count(sort=TRUE)
spp <- dat %>%
group_by(Accepted_name) %>%
filter(!Accepted_name=="") %>%
count(sort=TRUE)
##How many unique families, genera and species are in the database?
length(unique(fams$Accepted_family)) #167
length(unique(gens$Genus_matched)) #1688
length(unique(spp$Accepted_name)) #7210
#species diversity
spp <- dat %>%
group_by(Accepted_name) %>%
filter(!Accepted_name == "") %>% #there are 2398 records without species epithet
dplyr::summarise(count = n())
library(plotly)
#library(webr) #likely delete this package
library(ggplot2)
library(dplyr)
library(khroma)
library(ggpubr)
fig1<-dat %>%group_by(year)%>%tally(sort=TRUE)%>%na.omit()
mean(fig1$n)
IQR(fig1$n)
View(fig1)
hist(fig1$n)
median(fig1$n)
library(terra)
library(maps)
library(sf)
library(ggplot2)
library(ggmap)
library(ggalt)
install.packages("ggalt")
library(ggalt)
library(ggsn)
install.packages("ggsn")
#library(ggsn) not available for current R version
library(ggspatial)
#prepare bounding box for north america base map
north_america_bbox <- c(-127, 14, -52, 55)
# Set up the Molleweide projection
target_crs <- st_crs("+proj=moll +x_0=0 +y_0=0 +lat_0=0 +lon_0=133")
if (require("maps")) {
usa <- map_data("usa", interior=FALSE)
nm <- map_data("state", region="new mexico")
canada <- map_data("world", region="Canada")
mexico <- map_data("world", region="Mexico")
alaska <- map_data("world", region="USA:Alaska")
alaska <-subset(alaska,long<0) #drop the Aleutian islands
# Prepare a map of USA
NAmap <- ggplot() + geom_polygon(data = usa,
aes(x=long, y = lat, group = group),
fill = "white",
color="black",
size=.4) +
geom_polygon(data = canada, aes(x=long, y = lat, group = group),
fill = "white", color="black", size=.1) +
geom_polygon(data = mexico, aes(x=long, y = lat, group = group),
fill = "white", color="black", size=.4) +
geom_polygon(data = alaska, aes(x=long, y = lat, group = group),
fill = "white", color="black", size=.05) +
geom_polygon(data = nm, aes(x=long, y = lat, group = group), fill = "black", color = "black", size=.3, alpha=.7) +
#coord_sf(xlim = c(-125, -70),  ylim = c(20, 52), crs = st_crs(4326), datum = st_crs(4326)) +
coord_sf(xlim = c(-125, -100),  ylim = c(23, 45), crs = st_crs(4326), datum = st_crs(4326)) +
labs(x = "Longitude",
y = "Latitude") +
annotation_north_arrow(location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(0.25, "in"), pad_y = unit(0.25, "in")) +
annotation_scale(location = 'bl', width_hint = 0.15) +
theme_bw()
# Plot it in cartesian coordinates
NAmap
}
# Prepare a map of USA
NAmap <- ggplot() + geom_polygon(data = usa,
aes(x=long, y = lat, group = group),
fill = "white",
color="black",
size=.4) +
geom_polygon(data = canada, aes(x=long, y = lat, group = group),
fill = "white", color="black", linewidth=.1) +
geom_polygon(data = mexico, aes(x=long, y = lat, group = group),
fill = "white", color="black", linewidth=.4) +
geom_polygon(data = alaska, aes(x=long, y = lat, group = group),
fill = "white", color="black", linewidth=.05) +
geom_polygon(data = nm, aes(x=long, y = lat, group = group), fill = "black", color = "black", size=.3, alpha=.7) +
#coord_sf(xlim = c(-125, -70),  ylim = c(20, 52), crs = st_crs(4326), datum = st_crs(4326)) +
coord_sf(xlim = c(-125, -100),  ylim = c(23, 45), crs = st_crs(4326), datum = st_crs(4326)) +
labs(x = "Longitude",
y = "Latitude") +
annotation_north_arrow(location = "bl", which_north = "true", style = north_arrow_fancy_orienteering,
pad_x = unit(0.25, "in"), pad_y = unit(0.25, "in")) +
annotation_scale(location = 'bl', width_hint = 0.15) +
theme_bw()
# Plot it in cartesian coordinates
NAmap
##Ecoreg3
eco1 <- env.v %>%
filter(!ecoreg3=="") %>%
filter(!year>2023) %>%
mutate_at(c('ecoreg3.area'), as.numeric) %>%
group_by(ecoreg3, ecoreg3.area, year) %>%
summarise(cnt = n()) %>%
mutate(freq = round(cnt / sum(cnt), 3)) %>%
arrange(desc(freq))
eco3.hist<-ggplot(eco1, aes(x=as.numeric(year), color=ecoreg3)) +
geom_freqpoly(binwidth=5, alpha=0.8) +
scale_fill_smoothrainbow(discrete=TRUE) +
theme(legend.position = "right")
eco3.hist
#Ecoreg4
eco2 <- env.v %>%
filter(!ecoreg4=="") %>%
filter(!year>2023) %>%
mutate_at(c('ecoreg4.area'), as.numeric) %>%
group_by(ecoreg4, ecoreg4.area, year) %>%
summarise(cnt = n()) %>%
mutate(freq = round(cnt / sum(cnt), 3)) %>%
arrange(desc(freq))
citation(climateR)
citation("climateR")
citation("elevateR")
citation("elevatR")
library(elevatr)
remove.packages("elevatr", lib="~/Library/R/x86_64/4.3/library")
library(devtools)
install_github("jhollist/elevatr")
library(elevatr)
citation("elevatr")
citation("lme4")
citation("glmm")
packageVersion("lme4")
packageVersion("glmm")
library(CoordinateCleaner)
library(SampBias)
install.packages("sampbias")
install.packages("devtools")
require("devtools")
install_github("azizka/sampbias")
library(sampbias)
citation("sampbias")
library(dplyr)
library(glmm)
#Load datastack
load(file = "/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/manuscript_statsInputTables.RData")
#try method proposed as option #2 in Qian et al 2023
#i. Regress taxonomic diversity against phylogenetic diversity and calculate the residuals
try <- lm(relDiv ~ pd.obs.z, data=combinedAll)
plot(residuals(try))
#try method proposed as option #2 in Qian et al 2023
#i. Regress taxonomic diversity against phylogenetic diversity and calculate the residuals
pdtax2 <- lm(relDiv ~ pd.obs.z, data=combinedAll)
pdtax.resid<-residuals(pdtax2)
try <- data.frame(x = combinedAll$pd.obs.z, residuals = pdtax.resid, category = combinedAll$Layer)
View(try)
library(khroma)
# Plot residuals using ggplot2 with color-coded categories
ggplot(try, aes(x, residuals, color = category)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
theme_bw()
library(ggplot2)
# Plot residuals using ggplot2 with color-coded categories
ggplot(try, aes(x, residuals, color = category)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
theme_bw()
ggplot(try, aes(x, residuals, color = category)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
# Plot residuals using ggplot2 with color-coded categories
ggplot(try, aes(x, residuals)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
theme_bw()
ggplot(try, aes(x, residuals, color = category)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggplot(try, aes(x, residuals, color = category)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0.2), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggplot(try, aes(x, residuals, color = category)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggplot(try, aes(x, residuals, color = category)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggplot(try, aes(x, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggplot(try, aes(x, residuals, color = category)) +
geom_point(size=5) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggplot(try, aes(x, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
resid.pt3=residuals(pt3))
pt3 <- lm(numSpecies ~ pd.obs.z + ses.mntd.mntd.obs.z + ses.mpd.mpd.obs.z + totalRecords, data=combinedAll)
summary(pt3)
resid.pt3=residuals(pt3))
resid.pt3=residuals(pt3)
pt3.df <- data.frame(x=relDiv, residuals=resid.pt3, category=combinedAll$Layer)
pt4 <- lm(relDiv ~ pd.obs.z + ses.mntd.mntd.obs.z + ses.mpd.mpd.obs.z + totalRecords, data=combinedAll)
summary(pt4)
resid.pt4=residuals(pt4)
pt4.df <- data.frame(x=relDiv, residuals=resid.pt4, category=combinedAll$Layer)
pt4.df <- data.frame(x=pd.obs.z, residuals=resid.pt4, category=combinedAll$Layer)
pt4.df <- data.frame(residuals=resid.pt4, category=combinedAll$Layer)
View(try)
resid.pt4
pt4 <- lm(relDiv ~ pd.obs.z + ses.mntd.mntd.obs.z + ses.mpd.mpd.obs.z, data=combinedAll)
summary(pt4)
resid.pt4=residuals(pt4)
try <- cbind(
combinedAll[, c("pd.obs.z", "ses.mntd.mntd.obs.z", "ses.mpd.mpd.obs.z")],  # Include your independent variables
residuals = resid.pt4,
category = combinedAll$Layer
)
View(try)
pt3.residDF <- cbind(
combinedAll[, c("pd.obs.z", "ses.mntd.mntd.obs.z", "ses.mpd.mpd.obs.z")],  # Include your independent variables
residuals = resid.pt4,
category = combinedAll$Layer
)
# Plot residuals using ggplot2 with color-coded categories
ggplot(pt3.residDF, aes(ses.mntd.mntd.obs.z, residuals)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
theme_bw()
# Plot residuals using ggplot2 with color-coded categories
ggplot(pt3.residDF, aes(ses.mntd.mntd.obs.z, residuals)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
theme_bw()
View(pt3.residDF)
write.csv("/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Tables/pt3.residualsDF.csv", header=TRUE)
write.csv("/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Tables/pt3.residualsDF.csv", row.names=TRUE)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Figures/supplementSppAccumCurve.png", s5, width = 10, height = 6, dpi = 300)
write.csv(resid.pt3, "/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Tables/pt3.residualsDF.csv", row.names=TRUE)
# Plot residuals using ggplot2 with color-coded categories
ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Figures/suppPDvsNspp.png", pt3.plot, width = 10, height = 6, dpi = 300)
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Figures/suppPDvsNspp.png", pt3.plot, width = 10, height = 6, dpi = 300)
pt4.residDF <- cbind(
combinedAll[, c("pd.obs.z", "ses.mntd.mntd.obs.z", "ses.mpd.mpd.obs.z")],  # Include your independent variables
residuals = resid.pt4,
category = combinedAll$Layer
)
pt4.residDF <- cbind(
combinedAll[, c("pd.obs.z", "ses.mntd.mntd.obs.z", "ses.mpd.mpd.obs.z")],  # Include your independent variables
residuals = resid.pt4,
category = combinedAll$Layer
)
# Plot residuals using ggplot2 with color-coded categories
pt4.plot<-ggplot(pt4.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Figures/suppPDvsNspp.png", pt3.plot, width = 10, height = 6, dpi = 300)
write.csv(resid.pt4, "/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Tables/pt4.residualsDF.csv", row.names=TRUE)
summary(pt4)
pt3 <- lm(numSpecies ~ pd.obs.z + ses.mntd.mntd.obs.z + ses.mpd.mpd.obs.z + totalRecords, data=combinedAll)
summary(pt3)
pt3.residDF <- cbind(
combinedAll[, c("pd.obs.z", "ses.mntd.mntd.obs.z", "ses.mpd.mpd.obs.z")],  # Include your independent variables
residuals = resid.pt3,
category = combinedAll$Layer
)
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt4.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Figures/suppPDvsNspp.png", pt3.plot, width = 10, height = 6, dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Figures/suppPDvsNspp.png", pt3.plot, width = 10, height = 6, dpi = 300)
write.csv(resid.pt3, "/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Tables/pt.residualsDF.csv", row.names=TRUE)
summary(pt3)
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt4.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#geom_text(data = subset(try, residuals > 0), aes(label = category), vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt4.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), size=0.2, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt4.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), size=1, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt4.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt4.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), size=2.5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), size=2.5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Figures/suppPDvsNspp.png", pt3.plot, width = 10, height = 6, dpi = 300)
write.csv(resid.pt3, "/Users/elizabethlombardi/Desktop/Research/UNM/Herbarium collections patterns and gaps project/Tables/pt.residualsDF.csv", row.names=TRUE)
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals > 0), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = residuals, aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = factor(residuals), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = aes(try, residuals), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#geom_text(data = aes(try, residuals), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals < 999), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(try, residuals < -999), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(pt3.residDF, residuals < -999), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(pt3.residDF, residuals < -500), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(pt3.residDF, 500<residuals < -500), aes(label = category), size=5, vjust = -0.5) +
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(pt3.residDF, residuals < -500 | residuals > 500), aes(label = category), size=5, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
# Plot residuals using ggplot2 with color-coded categories
pt3.plot<-ggplot(pt3.residDF, aes(pd.obs.z, residuals, color = category)) +
geom_point(size=2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
geom_text(data = subset(pt3.residDF, residuals < -500 | residuals > 500), aes(label = category), size=2, vjust = -0.5) +
scale_color_smoothrainbow(discrete=TRUE, reverse=FALSE) +
guides(color = FALSE) +  # Remove legend
theme_bw()
pt3.plot
